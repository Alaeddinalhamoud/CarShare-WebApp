@model CarShare.Data.VehicleCurrentLocation

@{
    ViewData["Title"] = "WalkMe";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
    
    /* Optional: Makes the sample page fill the window. */
 

    #floating-panel {
       
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
        text-align: left;
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
    }
</style>

<!--== Page Title Area Start ==-->
<section id="page-title-area" class="section-padding overlay">
    <div class="container">
        <div class="row">
            <!-- Page Title Start -->
            <div class="col-lg-12">
                <div class="section-title  text-center">
                    <h2>Walk Me</h2>
                    <span class="title-line"><i class="fa fa-map-signs fa-2x"></i></span>
                    <br />

                    <div id="floating-panel">
                        <b>Mode of Travel: </b>
                        <select id="mode">
                            <option value="DRIVING">Driving</option>
                            <option value="WALKING">Walking</option>
                            <option value="BICYCLING">Bicycling</option>
                            <option value="TRANSIT">Transit</option>
                        </select>

                        <div class="maparea" id="map"></div>
                    </div>

                </div>
            </div>
            <!-- Page Title End -->

        </div>
    </div>
</section>




<script src="~/Style/js/jquery-3.2.1.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAJu3YwpJf6K5u1EVMtncPm4CD3209OWnw">
</script>
<script>

    $(document).ready(function () {
        console.log("ready!");
        latitue =@Model.Latitue;
         longitute =@Model.Longitute;
       
        initMap();
    });

    var pos;
    var directionsDisplay = new google.maps.DirectionsRenderer({ suppressMarkers: true });//super to prevent the defult icons
    var directionsService = new google.maps.DirectionsService;
    var map;

    function initMap() {

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
                function (position) {
                    pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    //My Map Code
                    //set the start init from pos
                   map= new google.maps.Map(document.getElementById('map'), {
                        zoom: 14,                        
                        center: { lat: pos.lat, lng: pos.lng }
                    });
                    directionsDisplay.setMap(map);
                    calculateAndDisplayRoute(directionsService, directionsDisplay);
                    document.getElementById('mode').addEventListener('change', function () {
                        calculateAndDisplayRoute(directionsService, directionsDisplay);
                    });

                }, showError);
        }
        else {
            alert("Geolocation is not supported by this browser.");
        }
    }    

    var StartIcon = {
        url: '/image/CarShare/StartIcon.png', // url
        scaledSize: new google.maps.Size(40, 40), // scaled size
        origin: new google.maps.Point(0, 0), // origin
        anchor: new google.maps.Point(15, 30) // anchor
    };
    var EndIcon = {
        url: '/image/CarShare/EndIcon.png', // url
        scaledSize: new google.maps.Size(40, 40), // scaled size
        origin: new google.maps.Point(0, 0), // origin
        anchor: new google.maps.Point(17, 28) // anchor
    };
    function calculateAndDisplayRoute(directionsService, directionsDisplay) {
        var selectedMode = document.getElementById('mode').value;
        console.log(latitue + " ready! " + longitute);
        console.log(pos.lat + " ready! " + pos.lng);
        directionsService.route({
            origin: { lat: pos.lat, lng: pos.lng },  // Haight.
            destination: { lat: latitue, lng: longitute },  // Ocean Beach.
            // Note that Javascript allows us to access the constant
            // using square brackets and a string value as its
            // "property."
            travelMode: google.maps.TravelMode[selectedMode]
        }, function (response, status) {
            if (status == 'OK') {
                directionsDisplay.setDirections(response);
                var leg = response.routes[0].legs[0];
                new google.maps.Marker({
                    position: leg.start_location,
                    map: map,
                    icon: StartIcon,
                    title: 'Start'
                });
                new google.maps.Marker({
                    position: leg.end_location,
                    map: map,
                    icon: EndIcon,
                    title: 'End'
                });
                
                
               

            } else {
                window.alert('Directions request failed due to ' + status);
            }
        });
    }

    function makeMarker(position, icon, title) {
        new google.maps.Marker({
            position: position,
            map: map,
            icon: icon,
            title: title
        });
    }


    function showError(error) {
        switch (error.code) {
            case error.PERMISSION_DENIED:
                alert("User denied the request for Geolocation.")
                break;
            case error.POSITION_UNAVAILABLE:
                alert("Location information is unavailable.")
                break;
            case error.TIMEOUT:
                alert("The request to get user location timed out.")
                break;
            case error.UNKNOWN_ERROR:
                alert("An unknown error occurred.")
                break;
        }
    }


</script>
